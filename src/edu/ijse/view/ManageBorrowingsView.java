/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.view;

import edu.ijse.Controller.BorrowingController;
import edu.ijse.dto.BorrowingDto;
import edu.ijse.service.user.BookService;
import edu.ijse.service.user.MemberService;
import edu.ijse.service.user.impl.BookServiceImpl;
import edu.ijse.service.user.impl.MemberServiceImpl;
import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lihini
 */
public class ManageBorrowingsView extends javax.swing.JFrame {
    private BorrowingController borrowingController;
    private BookService bookService;
    private MemberService memberService;
    private MainDashboard dashboard;
    
    

    /**
     * Creates new form ManageBorrowingsView
     */
    public ManageBorrowingsView() {
        initComponents();
        bookService = new BookServiceImpl(); 
        memberService = new MemberServiceImpl();
        borrowingController=new BorrowingController();
        loadBorrowingData();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); 
        setLocationRelativeTo(dashboard);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtborrowId = new javax.swing.JTextField();
        txtbId = new javax.swing.JTextField();
        txtmId = new javax.swing.JTextField();
        txtbData = new javax.swing.JTextField();
        txtdueDate = new javax.swing.JTextField();
        txtreturnDate = new javax.swing.JTextField();
        txtfine = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblborrowing = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 0, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 33)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Manage Borrowings");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Borrowing ID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Book ID");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Member ID");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Borrowing Date");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Due Date");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Return Date");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fine");

        txtbId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbIdActionPerformed(evt);
            }
        });

        txtbData.setText("YYYY-MM-DD");

        txtdueDate.setText("YYYY-MM-DD");

        txtreturnDate.setText("YYYY-MM-DD");

        btnAdd.setBackground(new java.awt.Color(0, 102, 102));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(204, 204, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 102, 102));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tblborrowing.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Borrowing ID", "Book ID", "Member ID", "Borrowing Date", "Due Date", "Return Date", "Fine"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblborrowing.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblborrowingMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblborrowing);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(183, 183, 183))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtborrowId)
                            .addComponent(txtbId)
                            .addComponent(txtmId)
                            .addComponent(txtbData))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(btnAdd)
                                .addGap(37, 37, 37)
                                .addComponent(btnUpdate)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtdueDate)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnDelete))
                            .addComponent(txtreturnDate)
                            .addComponent(txtfine))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtdueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtreturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtfine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtborrowId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtbId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtbData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtbIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbIdActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        saveBorrowing();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateBorrowing();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteBorrowing();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblborrowingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblborrowingMouseClicked
        DefaultTableModel dtm=(DefaultTableModel)tblborrowing.getModel();
        int selectId=tblborrowing.getSelectedRow();
        
        txtborrowId.setText(dtm.getValueAt(selectId, 0).toString());
        txtbId.setText(dtm.getValueAt(selectId, 1).toString());
        txtmId.setText(dtm.getValueAt(selectId, 2).toString());
        txtbData.setText(dtm.getValueAt(selectId, 3).toString());
        txtdueDate.setText(dtm.getValueAt(selectId, 4).toString());
        txtreturnDate.setText(dtm.getValueAt(selectId, 5).toString());
        txtfine.setText(dtm.getValueAt(selectId, 6).toString());
        
    }//GEN-LAST:event_tblborrowingMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBorrowingsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblborrowing;
    private javax.swing.JTextField txtbData;
    private javax.swing.JTextField txtbId;
    private javax.swing.JTextField txtborrowId;
    private javax.swing.JTextField txtdueDate;
    private javax.swing.JTextField txtfine;
    private javax.swing.JTextField txtmId;
    private javax.swing.JTextField txtreturnDate;
    // End of variables declaration//GEN-END:variables

    private void saveBorrowing() {
        try {            
            int id = Integer.parseInt(txtborrowId.getText());
            int bookId = Integer.parseInt(txtbId.getText());
            int memberId = Integer.parseInt(txtmId.getText());
            Date borrow_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtbData.getText());
            Date due_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtdueDate.getText());
            Date return_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtreturnDate.getText());
            BigDecimal fine = new BigDecimal(txtfine.getText());
            
            if (bookService == null || memberService == null) {
                JOptionPane.showMessageDialog(this, "Services not initialized properly.");
                return;
            }
            
            if (!bookService.bookExists(bookId)) {
                JOptionPane.showMessageDialog(this, "Book ID is not in the Database");
                return;
            }

            if (!memberService.memberExists(memberId)) {
                JOptionPane.showMessageDialog(this, "Member ID is not in the Database");
                return;
            }

            BorrowingDto borrowingDto = new BorrowingDto(id,bookId,memberId, borrow_date, due_date,return_date, fine);
            String response = borrowingController.saveBorrow(borrowingDto);
            JOptionPane.showMessageDialog(this, response);

            if ("Success".equalsIgnoreCase(response)) {
                JOptionPane.showMessageDialog(this, "Successfully Added.");
            } else {
                JOptionPane.showMessageDialog(this, "Add failed: " + response);
            }
            
            loadBorrowingData();
                clearForm();
                
                
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error adding borrowing: " + e.getMessage());
        }
        
    }

    private void updateBorrowing() {
        try {
            int id = Integer.parseInt(txtborrowId.getText());
            int book_id = Integer.parseInt(txtbId.getText());
            int member_id = Integer.parseInt(txtmId.getText());
            Date borrowing_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtbData.getText());
            Date due_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtdueDate.getText());
            Date return_date = new SimpleDateFormat("yyyy-MM-dd").parse(txtreturnDate.getText());
            BigDecimal fine = new BigDecimal(txtfine.getText());
            
            if (!bookService.bookExists(book_id)) {
                JOptionPane.showMessageDialog(this, "Book ID is not in the Database");
                return;
            }

            if (!memberService.memberExists(member_id)) {
                JOptionPane.showMessageDialog(this, "Member ID is not in the Database");
                return;
            }

            BorrowingDto borrowingDto = new BorrowingDto(id,book_id,member_id, borrowing_date, due_date,return_date, fine);
            String response = borrowingController.updateBorrow(borrowingDto);
            JOptionPane.showMessageDialog(this, response);

            if ("Success".equalsIgnoreCase(response)) {
                JOptionPane.showMessageDialog(this, "Successfully Updated.");
            } else {
                JOptionPane.showMessageDialog(this, "Update failed: " + response);
            }
            
            loadBorrowingData();
            clearForm();
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating borrowing: " + e.getMessage());
            
        }
    }

    private void deleteBorrowing() {
        try {
            int id = Integer.parseInt(txtbId.getText());

            // Check if the book exists before attempting to delete
            BorrowingDto borrowDto = borrowingController.get(id);
            

            String resp = borrowingController.deleteBorrow(id);
            JOptionPane.showMessageDialog(this, resp);

            if (!resp.contains("failed")) {
                loadBorrowingData();
                clearForm();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error at Delete Borrow details");
        }
    }

    private void loadBorrowingData() {
        try {
            Object columns[]={"Borrowing ID","Book ID","Member ID","Borrowing Date","Due Date","Return Date","Fine"};
            DefaultTableModel dtm=new DefaultTableModel(columns, 0){
               @Override
               public boolean isCellEditable(int row,int column){
                   return false;
               }
           };
           tblborrowing.setModel(dtm);
           
           
           ArrayList<BorrowingDto> borrowingDtos = borrowingController.getAllBorrowings();
           if (borrowingDtos == null) {
                borrowingDtos = new ArrayList<>(); 
           }
           for(BorrowingDto dto:borrowingDtos){
               Object[] rowData={dto.getId(),dto.getBook_id(),dto.getMember_id(),dto.getBorrow_date(),dto.getDue_date(),dto.getReturn_date(),dto.getFine()};
               dtm.addRow(rowData);
           }
        } catch (Exception e) {
            e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Error at loading borrowing details to Table");
        }
    }

    private void clearForm() {
        txtborrowId.setText("");
        txtbId.setText("");
        txtmId.setText("");
        txtbData.setText("");
        txtdueDate.setText("");
        txtreturnDate.setText("");
        txtfine.setText("");
    }
}
